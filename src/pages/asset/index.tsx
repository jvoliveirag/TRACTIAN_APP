import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import Highcharts from 'highcharts';
import HighchartsReact from 'highcharts-react-official';

import axios from 'axios';
import { FormEvent, useState, useEffect } from 'react'
import styles from '@/styles/Home.module.css'

import Sidebar from '@/components/Sidebar';

export default function Assets() {

  let id = 1
  const [assets, setAssets] = useState<any[]>([])

  useEffect(() => {
    axios.get("https://my-json-server.typicode.com/tractian/fake-api/assets", {
      params: {
        id: id
      }
    })
    .then((response) => {
      console.log(response.data)
      setAssets(response.data)
    })
    .catch(() => {
      console.log("Algo deu errado")
    })
  },[])

  const options = {
    chart: {
      type: 'spline',
      borderRadius: 10,
      height: (9 / 16 * 100) + '%',
    },
    title: {
      text: 'My chart'
    },
    series: [
      {
        data: [1, 2, 1, 4, 8, 3, 5]
      }
    ]
  };

  return (
    <>
      <Sidebar 
        path1="users" path2="companies" path3="workorders"
        name1='Colaboradores' name2='Unidades' name3='Atividades'
      />
      <Head>
        <title>Ativos</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className={styles.main}>

        <div>
          <h1 className={styles.title}>Ativos</h1>
        </div>

        <div className={styles.graph}>
          <HighchartsReact highcharts={Highcharts} options={options} />
          <HighchartsReact highcharts={Highcharts} options={options} />
          <HighchartsReact highcharts={Highcharts} options={options} />
          <HighchartsReact highcharts={Highcharts} options={options} />
        </div>

        <div className={styles.code}>
          {assets.map((asset, key) => {

            return (
              <div key={key}>
                <span className="">Nome: {asset.name}</span><br></br>
                <span className="">Modelo: {asset.model}</span><br></br>
                <span className="">Status: {asset.status}</span><br></br>
                <span className="">Total de coletas: {asset.metrics.totalCollectsUptime}</span><br></br>
                <span className="">Horas coletadas: {asset.metrics.totalUptime}</span><br></br>
                <span className="">Ãšltima coleta: {asset.metrics.lastUptimeAt}</span>
              </div>
            )

          })}
        </div>

      </main>
    </>
  )
}
